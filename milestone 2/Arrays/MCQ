1 Figure out the correct statement for the below line of code ?
int[] arr = new int[5];
arr = new int[6];
the code will run fine . the second line assigns a new array to arr.

2.What will be the output of the following code ?
int arr[] = new int[5];
System.out.println(arr[0]);
ans-0
Whenever an array is created all the elements are initialised to 0

3.What will be the output of the following code ?
char chArray[] = new char[15];
System.out.println(chArray[15]);
ans- ArrayOutOfBoundException
 For an array of size n, indexes of the array range from 0 to (n - 1). So here for array of size 15, valid indices are from 0 to 14. This chArray[15] is trying to access an invalid index which gives ArrayIndexOutOfBoundsException.

 4.What will be the output of the following code ?
boolean arr[] = new boolean[5];
System.out.println(arr[0]);
ans- false
boolean is initialised to false

5.What will be the output ?
public class Main {
    public static void main(String args[]){
      int arr[] = new int[5];
      arr[1] = 10;
      arr = new int[2];
      System.out.println(arr[0]);   
    }
}
ans-0
arr initially refers to an array of size 5, line 2 assigns 10 to arr[1] but in line 3 arr is made to point to a new array of size 2. By default all elements of integer array are initialized to 0. Hence line 4 will print 0.

6. Which of the options can be used to get the size of an array? when array is arr
arr.length

7.Which among the following are non-primitive datatypes?
Array,Scanner,String

8.What will be the output of the following code?
public static int sum(int [] arr)
{
    int arrsum=0;
    for(int i=0;i<5;i++)
    arrsum+=arr[i];
    return arrsum;
}
public static void main (String[] args) {
int arr[]={1,2,3,4,5,6,7,8};
System.out.print(sum(arr));
}
ans-15

9 public static void mul(int [] arr)
{
    for(int i=0;i<5;i++)
    arr[i]*=i;

}
public static void main (String[] args) {
    int arr[]={1,2,3,4,5};
    mul(arr);
    for(int i=0;i<5;i++)
    {
        System.out.print(arr[i]+" ");
    }
}
ans- 0 2 6 12 20

10. What will be the output of the following code ?
public class Main {
    public static void change(int input[]){
    input[0] = 15;
    }

    public static void main(String args[]){
        int arr[] = new int[5];
        change(arr);
        System.out.println(arr[0]);
    }
}
ans - 15
“arr” is a reference to the array, which contains address of the array. Hence we have passed this address to function “change”. Thus arr and input both refer to the same array. Hence the statement input[0] = 15 changes the value of element at index 0 of the array to 15.

11. What will be the output of the following code?
public static int[] change(int input[]){
input = new int[5];
input[0] = 15;
return input;
}

public static void main(String args[]){
    int arr[] = new int[5];
    arr=change(arr);
    System.out.println(arr[0]);
}
ans-15

12. What will be the output of the following code ?
public class Main {
    public static void change(int input[]){
    input = new int[5];
    input[0] = 15;
    }

    public static void main(String args[]){
        int arr[] = new int[5];
        change(arr);
        System.out.println(arr[0]);
    }
}
ans-0
“arr” is a reference to the array, which contains address of the array. Hence we have passed this address to function “change”. So input and arr will refer to same array initially, but in the first statement in function “change” input if made to refer to new integer array. So input[0] = 15, will change the first element of this newly formed array and the array created in main will remain unchanged.
